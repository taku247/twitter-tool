// Áí∞Â¢ÉÂ§âÊï∞„ÅÆÊ§úË®º„Å®„Éá„Éï„Ç©„É´„ÉàÂÄ§Ë®≠ÂÆö
const requiredEnvVars = [
    'TWITTER_API_KEY',
    'FIREBASE_API_KEY',
    'FIREBASE_AUTH_DOMAIN',
    'FIREBASE_PROJECT_ID',
    'FIREBASE_STORAGE_BUCKET',
    'FIREBASE_MESSAGING_SENDER_ID',
    'FIREBASE_APP_ID'
];

const optionalEnvVars = {
    'NODE_ENV': 'development',
    'PORT': '3000',
    'WORKER_SECRET': 'development-secret-change-in-production',
    'DISCORD_WEBHOOK_URL': '',
    'OPENAI_API_KEY': '',
    'FIREBASE_MEASUREMENT_ID': ''
};

function validateEnvironment() {
    const missing = [];
    const warnings = [];
    
    // ÂøÖÈ†àÁí∞Â¢ÉÂ§âÊï∞„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ
    for (const envVar of requiredEnvVars) {
        if (!process.env[envVar]) {
            missing.push(envVar);
        }
    }
    
    // „Ç™„Éó„Ç∑„Éß„É≥Áí∞Â¢ÉÂ§âÊï∞„ÅÆ„Éá„Éï„Ç©„É´„ÉàË®≠ÂÆö
    for (const [envVar, defaultValue] of Object.entries(optionalEnvVars)) {
        if (!process.env[envVar]) {
            process.env[envVar] = defaultValue;
            if (defaultValue) {
                warnings.push(`${envVar} not set, using default: ${defaultValue}`);
            }
        }
    }
    
    // ÁµêÊûú„É¨„Éù„Éº„Éà
    if (missing.length > 0) {
        console.error('‚ùå Missing required environment variables:');
        missing.forEach(envVar => console.error(`   - ${envVar}`));
        console.error('\nüí° Please set these environment variables in Railway Dashboard');
        console.error('   Project ‚Üí Settings ‚Üí Variables');
        return false;
    }
    
    if (warnings.length > 0) {
        console.warn('‚ö†Ô∏è  Using default values for:');
        warnings.forEach(warning => console.warn(`   - ${warning}`));
    }
    
    console.log('‚úÖ Environment validation passed');
    return true;
}

// ÈñãÁô∫Áí∞Â¢É„Åß„ÅÆÁí∞Â¢ÉÂ§âÊï∞„Éá„Éê„ÉÉ„Ç∞
function debugEnvironment() {
    if (process.env.NODE_ENV === 'development') {
        console.log('\nüîç Environment Debug Info:');
        console.log(`Node Version: ${process.version}`);
        console.log(`NODE_ENV: ${process.env.NODE_ENV}`);
        console.log(`PORT: ${process.env.PORT}`);
        console.log(`Firebase Project: ${process.env.FIREBASE_PROJECT_ID || 'NOT SET'}`);
        console.log(`Worker Secret: ${process.env.WORKER_SECRET ? 'SET' : 'NOT SET'}`);
        console.log(`Twitter API: ${process.env.TWITTER_API_KEY ? 'SET' : 'NOT SET'}`);
        console.log(`OpenAI API: ${process.env.OPENAI_API_KEY ? 'SET' : 'NOT SET'}`);
        console.log(`Discord Webhook: ${process.env.DISCORD_WEBHOOK_URL ? 'SET' : 'NOT SET'}\n`);
    }
}

module.exports = {
    validateEnvironment,
    debugEnvironment,
    requiredEnvVars,
    optionalEnvVars
};